diff --git a/config/llvm.m4 b/config/llvm.m4
index c6cf8858f6..f25efa25ed 100644
--- a/config/llvm.m4
+++ b/config/llvm.m4
@@ -47,20 +47,20 @@ AC_DEFUN([PGAC_LLVM_SUPPORT],
 
   # Collect compiler flags necessary to build the LLVM dependent
   # shared library.
-  for pgac_option in `$LLVM_CONFIG --cppflags`; do
+  for pgac_option in `$LLVM_CONFIG --link-static --cppflags`; do
     case $pgac_option in
       -I*|-D*) LLVM_CPPFLAGS="$pgac_option $LLVM_CPPFLAGS";;
     esac
   done
 
-  for pgac_option in `$LLVM_CONFIG --ldflags`; do
+  for pgac_option in `$LLVM_CONFIG --link-static --ldflags`; do
     case $pgac_option in
       -L*) LDFLAGS="$LDFLAGS $pgac_option";;
     esac
   done
 
   # ABI influencing options, standard influencing options
-  for pgac_option in `$LLVM_CONFIG --cxxflags`; do
+  for pgac_option in `$LLVM_CONFIG --link-static --cxxflags`; do
     case $pgac_option in
       -fno-rtti*) LLVM_CXXFLAGS="$LLVM_CXXFLAGS $pgac_option";;
       -std=*) LLVM_CXXFLAGS="$LLVM_CXXFLAGS $pgac_option";;
@@ -71,7 +71,7 @@ AC_DEFUN([PGAC_LLVM_SUPPORT],
   # libs. As some components are optional, we can't just list all of
   # them as it'd raise an error.
   pgac_components='';
-  for pgac_component in `$LLVM_CONFIG --components`; do
+  for pgac_component in `$LLVM_CONFIG --link-static --components`; do
     case $pgac_component in
       engine) pgac_components="$pgac_components $pgac_component";;
       debuginfodwarf) pgac_components="$pgac_components $pgac_component";;
@@ -85,7 +85,7 @@ AC_DEFUN([PGAC_LLVM_SUPPORT],
   # And then get the libraries that need to be linked in for the
   # selected components.  They're large libraries, we only want to
   # link them into the LLVM using shared library.
-  for pgac_option in `$LLVM_CONFIG --libs --system-libs $pgac_components`; do
+  for pgac_option in `$LLVM_CONFIG --link-static --libs --system-libs $pgac_components`; do
     case $pgac_option in
       -l*) LLVM_LIBS="$LLVM_LIBS $pgac_option";;
     esac
diff --git a/configure b/configure
index d5a6d499c1..658db7033a 100755
--- a/configure
+++ b/configure
@@ -5247,20 +5247,20 @@ fi
 
   # Collect compiler flags necessary to build the LLVM dependent
   # shared library.
-  for pgac_option in `$LLVM_CONFIG --cppflags`; do
+  for pgac_option in `$LLVM_CONFIG --link-static --cppflags`; do
     case $pgac_option in
       -I*|-D*) LLVM_CPPFLAGS="$pgac_option $LLVM_CPPFLAGS";;
     esac
   done
 
-  for pgac_option in `$LLVM_CONFIG --ldflags`; do
+  for pgac_option in `$LLVM_CONFIG --link-static --ldflags`; do
     case $pgac_option in
       -L*) LDFLAGS="$LDFLAGS $pgac_option";;
     esac
   done
 
   # ABI influencing options, standard influencing options
-  for pgac_option in `$LLVM_CONFIG --cxxflags`; do
+  for pgac_option in `$LLVM_CONFIG --link-static --cxxflags`; do
     case $pgac_option in
       -fno-rtti*) LLVM_CXXFLAGS="$LLVM_CXXFLAGS $pgac_option";;
       -std=*) LLVM_CXXFLAGS="$LLVM_CXXFLAGS $pgac_option";;
@@ -5271,7 +5271,7 @@ fi
   # libs. As some components are optional, we can't just list all of
   # them as it'd raise an error.
   pgac_components='';
-  for pgac_component in `$LLVM_CONFIG --components`; do
+  for pgac_component in `$LLVM_CONFIG --link-static --components`; do
     case $pgac_component in
       engine) pgac_components="$pgac_components $pgac_component";;
       debuginfodwarf) pgac_components="$pgac_components $pgac_component";;
@@ -5285,7 +5285,7 @@ fi
   # And then get the libraries that need to be linked in for the
   # selected components.  They're large libraries, we only want to
   # link them into the LLVM using shared library.
-  for pgac_option in `$LLVM_CONFIG --libs --system-libs $pgac_components`; do
+  for pgac_option in `$LLVM_CONFIG --link-static --libs --system-libs $pgac_components`; do
     case $pgac_option in
       -l*) LLVM_LIBS="$LLVM_LIBS $pgac_option";;
     esac
diff --git a/meson.build b/meson.build
index 1555598a75..ef1eaef64c 100644
--- a/meson.build
+++ b/meson.build
@@ -792,7 +792,7 @@ endif
 llvmopt = get_option('llvm')
 llvm = not_found_dep
 if add_languages('cpp', required: llvmopt, native: false)
-  llvm = dependency('llvm', version: '>=10', method: 'config-tool', required: llvmopt)
+  llvm = dependency('llvm', version: '>=10', method: 'config-tool', required: llvmopt, static: true)
 
   if llvm.found()
 
